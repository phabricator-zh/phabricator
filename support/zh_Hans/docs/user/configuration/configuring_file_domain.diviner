@title 配置文件域名
@group config

备用文件域名和 CDN 设置指南。


概览
========

用户上传文件的域名和 Phabricator 运行所在的域名相同时有安全风险的。

一般来说，这样做的风险是，有上传权限的用户可能会上传一个专门制作的文件
（像 Flash 或 Java applets 文件），这些拥有域名权限的文件在某些情况
（通常因为 Flash 和 Java 的安全问题，但两个产品都有丰富安全问题的历史）下
将会运行。攻击者能勾诱导其他用户执行这个文件，从而获得它们的权限。

消除这个威胁的最好办法是通过单独的域名来处理文件请求。
比如：如果 Phabricator 运行在 `https://phabricator.example.com/`，
你可以用`https://files.exampleusercontent.com/`来处理文件请求。

备用的域名应该和你的主域名完全不同，不应该是不同的子域名。比如， Google 使用
`googleusercontent.com`，而//不是// `usercontent.google.com`。

也可以配置备用域名来使用 CDN，这将提高性能。


方式
=========

广泛地，您可以选择一个 CDN 服务并配置它
（这也会消除了安全风险）或者可以像配置第一个域名一样配置第二个域名。
CDN 服务可能更容易设置，也可以提高性能。


| 方式 | 设置难度 | 费用 | 备注 |
|---|---|---|---|
| AWS CloudFront | 很容易 | 便宜 | 推荐 |
| CloudFlare | 容易 | 免费/便宜 | 推荐 |
| 自托管 | 中等 | 免费 | No CDN unless you're an ops wizard. |

方式: AWS CloudFront
========

CloudFront 作为 Amazon Web Services 的一部分提供 CDN 服务。
如果你使用 AWS 安装，这个很适合。

创建一个新的 CloudFront distribution，将它指向到你安装的 Phabricator。
确保指向的是主域名，而不是负载均衡器或某个实例。你不需要设置新的域名，
这个简化了设置过程。

可以保留绝大数默认值，但是你需要将 **Allowed HTTP Methods** 从
`GET, HEAD` 修改为 `GET, HEAD, OPTIONS, PUT, POST, PATCH, DELETE`。

配置完成后，访问域名应该能看到一个表示 Phabricator 无法识别域名的错误页面。
如果看到此页面，代表你的配置是正确的。

直接查看下文 “配置 Phabricator”。


方式: CloudFlare
========

WARNING: 你需要检查你的 CloudFlare 配置，一定要确保关闭所有的
JavaScript, HTML, CSS 精简和优化功能，包括像 "Rocket Loader"的功能。
这些功能将以不可预测的奇怪和灵异方式破坏 Phabricator 。只允许 CloudFlare
缓存文件，永远不要优化它们。


[[ https://cloudflare.com | CloudFlare ]] 通用的 CDN 服务。

要启用 CloudFlare，需要先注册一个域名，然后按它们的完整流程将域名托管在它们的服务上。
使用 CNAME 记录转发子域名到你的 Phabricator。

CloudFlare 将自动生成托管域名的 SSL 证书，这将显著的减少费用和设置复杂度。

完成设置后，访问 CNAME 转发的子域名应该能看到一个表示 Phabricator 无法识别域名的错误页面。
如果看到此页面，代表你的配置是正确的。

直接查看下文 “配置 Phabricator”。

方式: 自托管
========

像设置主域名一样设置第二域名即可。
设置完成后，访问域名应该能看到一个表示 Phabricator 无法识别域名的错误页面。
如果看到此页面，代表你的配置是正确的。

如果使用 SSL（应该使用），也需要为此域名获取一个证书，并配置它。

也可以配置自托管域名通过缓存服务器提供某些 CDN 服务，来提供性能优势，
但这超出了本文档内容范围。


直接查看下文 “配置 Phabricator”。

配置 Phabricator
========

配置 CDN 或备用域名后，配置 Phabricator 来识别此域名。
运行此命令，用配置域名替换 `<domain>`。
需要包含协议，示例域名： `https://cdn.phabcdn.net/`。

  phabricator/ $ ./bin/config set security.alternate-file-domain <domain>

Phabricator 现在应该通过文件域名来处理 CSS、JS、 images、头像、以及其他用户内容。
可以通过 "View Source" 或下载文件查看 URL 来确认这一点。
