@title Diffusion 用户指南: 提交钩子
@group userguide

在托管代码库中使用提交钩子的 指南。

= 概览 =

Phabricator 会自动在托管代码库中安装 pre-receive/pre-commit 挂钩。 
它们自动强制执行一些规则（例如防止危险的更改，除非将代码库配置为允许它们）。 
他们还可以通过 Herald 使用 "Commit Hook:Branches/Tags/Bookmarks" 和
"Commit Hook: Commit Content" 规则类型强制执行更复杂的规则。

Herald 规则是灵活的，并且可以表示许多通常安装在仓库上的最常见的钩子
（例如保护分支，限制对存储库的访问，以及请求审查）。

但是，如果 Herald 并不能满足您的所有需求时，你可以安装额外的自定义钩子。
除了极少区别外， 这些钩子和普通钩子一样工作。


= 安装自定义钩子 =

使用托管代码库，您可以通过将挂接放置到磁盘上的仓库的相关目录中来安装钩子：

  - **SVN** 将钩子放在 `hooks/pre-commit-phabricator.d/`。
  - **Git** 将钩子放在 `hooks/pre-receive-phabricator.d/`。
  - **Mercurial** Phabricator 还不支持在 Mercurial中使用自定义钩子。

这些钩子和普通 `pre-commit` 或 `pre-receive` 钩子一样:

  - 这些目录中的可执行文件将按字母顺序执行。
  - 它们将被传递正常钩子传递的参数和环境变量。
  - 它们应该像正常钩子一样进行输出和返回代码。
  - 这些钩子只有在所有 Herald 规则通过后才会运行，而 Phabricator 则准备接受提交或推送。

除了 VCS 通常提供的变量之外，还有一些附加环境变量可以可用：

  - `PHABRICATOR_REPOSITORY` 钩子执行所在仓库的 PHID 
  - `PHABRICATOR_USER` 会话被认证的 Phabricator 用户名。
  - `PHABRICATOR_REMOTE_ADDRESS` 连接的远程地址（即，正在推送或提交的人的 IP 地址）。
  - `PHABRICATOR_REMOTE_PROTOCOL` 连接正在使用的协议（例如，“ssh”或“http”）。
