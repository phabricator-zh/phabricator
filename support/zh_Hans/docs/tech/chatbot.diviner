@title 聊天机器人技术文档
@group bot

配置和扩展 聊天机器人。

= 概览 =

Phabricator 包括一个简单的聊天机器人守护程序，主要是作为一个例子，
介绍如何编写外部脚本使用 Conduit 接口与 Phabricator 交互，并实现了一些有用的功能。 
如果您使用 IRC 或其他支持的聊天协议，您还可以让机器人在您的频道中进行聊天。

NOTE: 聊天机器人是实验性的，还没有成熟。

= 配置机器人 =

机器人通过 JSON 文件来进行配置。示例在:

  resources/chatbot/example_config.json

支持的配置项如下:

  - `server` 字符串, 必填, 连接的服务器
  - `port` 整数, 可选, 连接的端口 (默认 6667)
  - `ssl` 布尔值, 可选, 是否使用 SSL (默认为 false)
  - `nick` 字符串, 使用的昵称
  - `user` 字符串, 可选, 使用的用户名 (默认是 `nick`).
  - `pass` String, 可选, 密码
  - `nickpass` String, 可选, NickServ 的密码
  - `join` 数组, 加入的频道列表
  - `handlers` 数组, 运行的处理程序列表。 他们就像机器人的插件。
  - `conduit.uri`, `conduit.token` Conduit 配置, 查看下文。
  - `notification.channels` 通知配置, 查看下文。

= 处理程序 =

你指定一个“处理程序”的列表，这就像是 bot 的插件或模块。 这些是可用的默认处理程序：

  - @{class:PhabricatorBotObjectNameHandler} 
  	这个处理程序查找在聊天中提到 Phabricator 对象（如 "T123" 和 "D345"） 的用户。
	将对象名字替换成对应的连接。需要 conduit。
  - @{class:PhabricatorBotFeedNotificationHandler} 
  	此处理程序会发布在 `notification.channels` 列出的频道中发布有关修订版本更改的通知。
  - @{class:PhabricatorBotLogHandler} 此处理程序保存聊天记录，可在 Phabricator Web 界面中浏览。
  - @{class:PhabricatorBotSymbolHandler} 
  	此处理程序对 Diffusion 中的符号查找进行响应。
  - @{class:PhabricatorBotMacroHandler} 
    这个处理程序寻找提到宏（macros）的用户，如果在聊天中发现则进行转换。 
	使用 `macro.size` 和 `macro.aspect` 配置。
	
可以通过扩展 @{class:PhabricatorBotHandler}来编写自己的处理程序。

= Conduit =

一些处理程序需要通过 Conduit （Phabricator's HTTP API） 从 Phabricator 读取数据。
这个方法允许其他服务器上的其他语言的脚本和程序访问 Phabricator 的数据。

要使得机器人反问 Conduit，需要创建一个可以登录的用户。
用管理员账户登录到 Phabricator ，打开 `用户 -> 创建新账户` 页面，
创建一个新账户，将其标示为 "机器人/脚本"（"Bot/Script"）。然后在你的
配置文件里，设置：

  - `conduit.uri` 安装 Phabricator 的 URI , 例如
    `http://phabricator.example.com/`
  - `conduit.token` 用户的 conduit API token, 从用户管理页面的 "Conduit API Tokens" 选项卡中。

现在机器人应该能够通过 Conduit 连接到 Phabricator 。

= 启动机器人 =

机器人是一个 Phabricator 后台程序，通过 `phd` 命令启动它。

  ./bin/phd launch phabricatorbot <absolute_path_to_config_file>

如果遇到问题，可以尝试用 `debug` 替换 `launch`，查看 @{article:用 phd 管理后台进程} 了解更多。
