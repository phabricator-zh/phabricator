@title 锁定和隐藏配置
@group config

有关锁定和隐藏配置的 详细信息。

概览
========

一些配置选项是被 **锁定** 或 **隐藏***的。
如果选项具有这些属性中的一个，意味着：

  - **锁定配置**: 这个设置不能通过网页界面写入。
  - **隐藏配置**: 这个设置不能通过网页界面读取和写入。

本文档详细解释了这些属性。


锁定配置
====================

**锁定配置** 不能通过网页界面编辑。
一般，你可以通过命令行使用 `bin/config`编辑它们：

```
phabricator/ $ ./bin/config set <key> <value>
```

有些设置有自己的命令行工具。参考设置页面了解详情。

这些设置不能写入数据库，即使是通过命令行。

锁定的值不能被解锁：它们被锁定是因为这些设置做的事情或这些设置执行的操作。
设置选项被锁定的原因包括：


**启动时需要**: 有些选项，比如 `mysql.host`，必须在 Phabricator 能够
从数据库读取配置时可用。

如果仅将 `mysql.host` 存储在数据库中，那 Phabricator 将无法知道如何连接到数据库，
也就无法读取第一步设置的数值。

这些选项必须通过配置源来提供，这能够在 Phabricator 启动前，连接到数据库前读取它们。


**无法通过网页界面修复的错误**: 一些选项，如 `phabricator.base-uri` 配置不正确
将关闭网页界面。

如果可以从 Web 界面中配置这些选项，当不小心设置错误时，将无法修复它们。
因为 Web 界面已经不工作了，所以你无法加载页面修正值了。

我们要求这些选项通过命令行修改，可以确保用户可以修复任何错误。


**攻击者可以获取更多的权限**: 

攻击者如果获取了管理员访问权限可以修改某些配置获取更大的权限。

例如，一个攻击者可以修改`metamta.mail-adapter`（和其他
类似选项），可以重新配置 Phabricator 通过他们控制的恶意服务器发送邮件，
然后触发其他用户帐户的密码重置来危及他们。

我们要求这些选项通过命令行修改，可以确保用户对自己的安装拥有完整的权限。


隐藏配置
====================

**隐藏配置** 和锁定配置类似，但是它也不能通过网页界面读取。

几乎所有情况下，配置被隐藏都是因为它们是外部服务用到的密钥或授权令牌。
这些值在网页界面隐藏可以防止管理员（或者获取了管理账号的攻击者）读取它们。

可以通过命令行检查（编辑）隐藏配置：

```
phabricator/ $ ./bin/config get <key>
phabricator/ $ ./bin/config set <key> <value>

```


下一步
==========

接下来:

  - 返回到 @{article: 配置向导}.
