@title 配置向导
@group config

本文档包含 Phabricator 的基本配置说明。

= 先决条件 =

本文档假定您已正确安装所有需要的组件，若没有，请参看@{article:安装向导}.

下一步:

  - 配置网页服务器 (Apache, nginx, 或 lighttpd)
  - 通过浏览器访问 Phabricator
  - 按照说明完成设置

= 网页服务器: 配置 Apache =

NOTE: 使用 Apache 时参照此说明，使用 nginx 或 lighttpd, 请将页面翻到相应部分查看。

运行 Apache 并确保它能展示测试页面。 如需帮助查看 Apache
帮助文档。 确保启用 `mod_php` 和 `mod_rewrite` 模块,
如果使用 SSL 也需要启用 `mod_ssl` 。

如果没有设置域名，请添加相关设置。你可以将 Phabricator 安装在子域名 (如
phabricator.example.com) 下或完整域名下。但不要安装在已有网站的子目录下。
使用您配置的域名浏览，验证 Apache 工作正常 和 DNS 配置正确。


NOTE: 确保域名含有  ('.'), i.e. 不是像'http://example/' 的裸域名。
否则，某些浏览无法设置 cookie。

接下来为 Phabricator 添加一个虚拟主机配置。 配置大体如下:

  name=httpd.conf
  <VirtualHost *>
    # Change this to the domain which points to your host.
    ServerName phabricator.example.com

    # Change this to the path where you put 'phabricator' when you checked it
    # out from GitHub when following the Installation Guide.
    #
    # Make sure you include "/webroot" at the end!
    DocumentRoot /path/to/phabricator/webroot

    RewriteEngine on
    RewriteRule ^(.*)$          /index.php?__path__=$1  [B,L,QSA]
  </VirtualHost>

如果不想 Apache 暴露 Phabricator 所在目录之外的东西，需添加 `<Directory />` 配置。 
这部分的配置语法不同 Apache 版本（不知道版本，通过运行 `httpd -v` 查看）存在差异。
Apache 2.4 之前版本, 使用:

  name="Apache Older Than 2.4"
  <Directory "/path/to/phabricator/webroot">
    Order allow,deny
    Allow from all
  </Directory>

Apache 2.4 及之后版本, 使用:

  name="Apache 2.4 and Newer"
  <Directory "/path/to/phabricator/webroot">
    Require all granted
  </Directory>

修改以后重启 Apache, 继续进行之后的配置.

= 网页服务器: 配置 nginx =

NOTE: 说明仅针对 nginx，使用 Apache 或 lighttpd 的情查看相关部分。

nginx 配置:

  name=nginx.conf
  server {
    server_name phabricator.example.com;
    root        /path/to/phabricator/webroot;

    location / {
      index index.php;
      rewrite ^/(.*)$ /index.php?__path__=/$1 last;
    }

    location /index.php {
      fastcgi_pass   localhost:9000;
      fastcgi_index   index.php;

      #required if PHP was built with --enable-force-cgi-redirect
      fastcgi_param  REDIRECT_STATUS    200;

      #variables to make the $_SERVER populate in PHP
      fastcgi_param  SCRIPT_FILENAME    $document_root$fastcgi_script_name;
      fastcgi_param  QUERY_STRING       $query_string;
      fastcgi_param  REQUEST_METHOD     $request_method;
      fastcgi_param  CONTENT_TYPE       $content_type;
      fastcgi_param  CONTENT_LENGTH     $content_length;

      fastcgi_param  SCRIPT_NAME        $fastcgi_script_name;

      fastcgi_param  GATEWAY_INTERFACE  CGI/1.1;
      fastcgi_param  SERVER_SOFTWARE    nginx/$nginx_version;

      fastcgi_param  REMOTE_ADDR        $remote_addr;
    }
  }

修改以后重启 nginx, 继续进行之后的配置.

= 网页服务器: 配置 lighttpd =

NOTE: 说明仅针对 lighttpd，使用 Apache 或 niginx, 请参考相关说明部分。

对于 lighttpd, 在 lighttpd.conf 添加:

  $HTTP["host"] =~ "phabricator(\.example\.com)?" {
      server.document-root = "/path/to/phabricator/webroot"
      url.rewrite-once = (
          # This simulates QSA ("query string append") mode in apache
          "^(/[^?]*)\?(.*)" => "/index.php?__path__=$1&$2",
          "^(/.*)$" => "/index.php?__path__=$1",
      )
  }

同时需要确保 server.modules 有以下部分:

  mod_fastcgi
  mod_rewrite

最后, 使用下面的域名启用 php :

  $ sudo apt-get install php5-cgi  # for ubuntu; other distros should be similar
  $ sudo lighty-enable-mod fastcgi-php

修改以后重启 lighttpd, 继续进行之后的配置.

= 配置 =

现在，使用您配置的域名浏览，应该可以看到接下来的配置说明。本文剩余部分将会对这些步骤进行额外的说明。

所有问题都解决后，将看到欢迎页面, 输入密码创建管理账号。登录后，
你需要配置其他用户登录和注册的方式，否则没有人可以注册和登录。  
查看@{article:账号与注册配置} 了解更多。

= 存储: 配置 MySQL =

配置过程中, 你需要配置 MySQL。 运行 MySQL 并确保能能够连接. 
如需帮助，查看 MySQL 文档。
MySQL 启动后, 需要载入 Phabricator schemata 。运行:

  phabricator/ $ ./bin/storage upgrade

执行 schema 变更需要特权账号，如果配置的连接数据库的用户是非特权账号，需要使用下面的参数变更
使用的连接数据库账号：

  phabricator/ $ ./bin/storage upgrade --user <user> --password <password>

传递 `--force` 参数可以避免脚本弹出警告提示（例如，升级过程中）。

  phabricator/ $ ./bin/storage upgrade --force

NOTE: 升级 Phabricator 时, 再次运行 `storage upgrade` 应用更新。

= 下一步 =

接下来:

  - 参照 @{article:账号与注册配置}设置管理账号及登录注册; 或
  - 查看 @{article:高级配置}了解高级配置选项; 或
  - 参照 @{article:配置文件域名} 配置文件域名; 或
  - 参照@{article:Configuring a Preamble Script} 配置 preamble 脚本设置负载均衡变量
    或调整速率限制或
  - 参照@{article:配置文件存储}配置如何保存上传文件和附件；或
  - 参照@{article:配置出站邮件} 进行邮件发送配置，或
  - 参照  @{article:配置入站邮件} 配置收取邮件; 或
  - 参照 @{article:Diffusion User Guide} 导入仓库; 或
  - 通过 @{article:用 phd 管理后台进程} 了解后台进程; 或
  - 通过 @{article:配置通知服务}; 
    了解通知服务，或
  - 参照 @{article:数据备份和迁移配置} 进行数据备份和迁移; 或
  - 参照 @{article:Contributor Introduction}进行贡献
